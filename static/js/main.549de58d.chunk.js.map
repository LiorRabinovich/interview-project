{"version":3,"sources":["components/SingleCard/SingleCard.module.scss","components/CardsList/CardsList.module.scss","components/AppSelect/AppSelect.module.scss","containers/PostsList/PostsList.module.scss","components/SingleCard/SingleCard.js","components/CardsList/CardsList.js","components/AppSelect/AppSelect.js","api/posts.js","api/google-translate.js","store/slices/posts.js","store/slices/languages.js","containers/PostsList/PostsList.js","App.js","store/store.js","index.js"],"names":["module","exports","SingleCard","title","body","postIndex","like","dislike","handleLike","handleDislike","className","styles","root","actions","onClick","CardsList","posts","error","loading","pageSize","useState","displayPosts","setDisplayPosts","page","setPage","useEffect","slice","handleScroll","undefined","window","pageYOffset","document","documentElement","parentNode","scrollTop","html","Math","max","scrollHeight","offsetHeight","clientHeight","getDocumentHeight","innerHeight","addEventListener","removeEventListener","map","post","AppSelect","active","items","handleChange","disabled","onChange","e","target","value","default","language","POSTS_API","a","fetch","response","json","GOOGLE_TRANSLATE_API_KEY","process","GOOGLE_TRANSLATE_API_URL","getLanguages","translate","values","method","headers","JSON","stringify","key","q","fetchTranslateSinglePost","item","translations","data","translatedText","fetchPosts","createAsyncThunk","fetchTranslatePosts","getState","Promise","all","pending","state","rejected","payload","errorMessage","message","postsSlice","createSlice","name","initialState","displayItems","reducers","disLike","extraReducers","fulfilled","selectPostsLanguage","selectPostsError","selectPostsLoading","selectPostsPageSize","selectPostsItems","postsReducer","reducer","fetchLanguages","languages","languagesSlice","selectLanguagesItems","selectLanguagesError","selectLanguagesLoading","languagesReducer","PostsList","useSelector","postPageSize","postLanguage","postsError","postsLoading","languagesError","languagesLoading","dispatch","useDispatch","itemIndex","App","store","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,8B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,2B,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,2B,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,0B,8ICElB,SAASC,EAAT,GAAmG,IAA7EC,EAA4E,EAA5EA,MAAOC,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,UAA+D,IAApDC,YAAoD,MAA7C,EAA6C,MAA1CC,eAA0C,MAAhC,EAAgC,EAA7BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cACpF,OACI,0BAASC,UAAWC,IAAOC,KAA3B,UACI,sBAAKF,UAAWC,IAAOE,QAAvB,UACI,yBAAQC,QAAS,kBAAMN,EAAWH,IAAlC,UAA+CC,EAA/C,mBACA,yBAAQQ,QAAS,kBAAML,EAAcJ,IAArC,UAAkDE,EAAlD,sBAEJ,6BAAKJ,IACL,4BAAIC,O,qBCOT,SAASW,EAAT,GAAoF,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,QAASV,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,cAAeU,EAAY,EAAZA,SAAY,EAC9CC,mBAAS,IADqC,mBAC/EC,EAD+E,KACjEC,EADiE,OAE9DF,mBAAS,GAFqD,mBAE/EG,EAF+E,KAEzEC,EAFyE,KAoBtF,OAhBAC,qBAAU,WACNH,EAAgBN,EAAMU,MAAM,EAAGH,EAAOJ,MACvC,CAACH,EAAOO,EAAMJ,IAEjBM,qBAAU,WACN,SAASE,UAtBkBC,IAAvBC,OAAOC,YAA6BD,OAAOC,aAAeC,SAASC,iBAAmBD,SAAS3B,KAAK6B,YAAcF,SAAS3B,MAAM8B,WAG7I,WACI,IAAM9B,EAAO2B,SAAS3B,KAChB+B,EAAOJ,SAASC,gBAEtB,OAAOI,KAAKC,IACRjC,EAAKkC,aAAclC,EAAKmC,aACxBJ,EAAKK,aAAcL,EAAKG,aAAcH,EAAKI,cAclBE,GAAsBZ,OAAOa,aAClDlB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,KAI3B,OADAM,OAAOc,iBAAiB,SAAUhB,GAC3B,WACHE,OAAOe,oBAAoB,SAAUjB,MAE1C,IAECT,EACO,6CAIP,eAAC,WAAD,WACKD,EAAQ,sBAAKP,UAAWC,IAAOM,MAAvB,oBAAsCA,KAAe,KAC9D,oBAAIP,UAAWC,IAAOC,KAAtB,SACKS,EAAawB,KAAI,SAACC,EAAMzC,GAAP,OACd,6BAAoB,cAACH,EAAD,2BAAgB4C,GAAhB,IAAsBzC,UAAWA,EAAWG,WAAYA,EAAYC,cAAeA,MAA9FJ,W,qBC7CtB,SAAS0C,EAAT,GAAqE,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,MAAO/B,EAAgC,EAAhCA,QAASD,EAAuB,EAAvBA,MAAOiC,EAAgB,EAAhBA,aACvD,OACI,2BAAUxC,UAAWC,IAAOC,KAA5B,UACI,yBACIuC,SAAUjC,GAAWD,EACrBmC,SAAU,SAACC,GAAD,OAAOH,EAAaG,EAAEC,OAAOC,QACvCA,MAAOP,EAHX,UAII,wBAAQQ,SAAO,EAAf,6BACCP,EAAMJ,KAAI,gBAAGY,EAAH,EAAGA,SAAH,OAAkB,wBAAuBF,MAAOE,EAA9B,SAAyCA,GAA5BA,SAE7CxC,EAAQ,qBAAKP,UAAWC,IAAOM,MAAvB,SAA+BA,IAAe,Q,0DCZ7DyC,EAAY,6C,4CAEX,4BAAAC,EAAA,sEACoBC,MAAMF,GAD1B,cACGG,EADH,yBAEIA,EAASC,QAFb,4C,sBCFP,I,EAAMC,EAA2BC,0CAC3BC,EAA2B,2DAE1B,SAAeC,IAAtB,+B,4CAAO,4BAAAP,EAAA,sEACoBC,MAAM,GAAD,OAAIK,EAAJ,0BAA8CF,IADvE,cACGF,EADH,yBAEIA,EAASC,QAFb,4C,sBAKA,SAAeK,EAAtB,oC,4CAAO,WAAyBC,EAAQd,GAAjC,eAAAK,EAAA,sEACoBC,MAAM,GAAD,OAAIK,EAAJ,gBAAoCF,GAA4B,CACxFM,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBlE,KAAMmE,KAAKC,UAAU,CACjBC,IAAKV,EACLW,EAAGN,EACHd,aATL,cACGO,EADH,yBAaIA,EAASC,QAbb,4C,+BCJQa,E,gFAAf,WAAwCC,EAAMnB,GAA9C,uBAAAE,EAAA,sEACyBQ,EAAU,CAACS,EAAKzE,MAAOyE,EAAKxE,MAAOqD,GAD5D,YACQI,EADR,QAEe5C,MAFf,sBAE4B4C,EAAS5C,MAFrC,cAGU4D,EAAiBhB,EAASiB,KAA1BD,aAHV,cAIwBA,EAJxB,GAIS1E,EAJT,KAIgBC,EAJhB,kDAKcwE,GALd,IAKoBzE,MAAOA,EAAM4E,eAAgB3E,KAAMA,EAAK2E,kBAL5D,4C,sBAQO,IAAMC,EAAaC,YAAiB,oBFVpC,WAAP,kCEWaC,EAAsBD,YAAiB,4BAAD,uCAA8B,WAAOxB,EAAP,sBAAAE,EAAA,6DAAmBwB,EAAnB,EAAmBA,SAC1FlC,EAAUkC,IAAWnE,MAArBiC,MADuE,SAG3DmC,QAAQC,IAC1BpC,EAAMJ,KAAI,SAAC+B,GAAD,OAAUD,EAAyBC,EAAMnB,OAJ0B,cAGzEzC,EAHyE,yBAOxE,CAAEyC,WAAUzC,UAP4D,2CAA9B,yDAUnD,SAASsE,EAAQC,GACfA,EAAMtE,MAAQ,KACdsE,EAAMrE,SAAU,EAGlB,SAASsE,EAASD,EAAlB,GAA8C,IAAnBE,EAAkB,EAAlBA,QAASxE,EAAS,EAATA,MAClCsE,EAAMrE,SAAU,EAChBqE,EAAMtE,OAAe,OAAPwE,QAAO,IAAPA,OAAA,EAAAA,EAASC,eAAgBzE,EAAM0E,QAGxC,I,EAAMC,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZ7E,SAAS,EACTD,MAAO,KACPwC,SAAU,KACVR,MAAO,GACP9B,SAAU,GACV6E,aAAc,IAEhBC,SAAU,CACR3F,KAAM,SAACiF,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAc,EACPF,EAAMtC,MAAMwC,GAAzBnF,YADoB,MACb,EADa,EAE5BiF,EAAMtC,MAAMwC,GAASnF,KAAOA,EAAO,GAErC4F,QAAS,SAACX,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAc,EACPF,EAAMtC,MAAMwC,GAA5BlF,eADuB,MACb,EADa,EAE/BgF,EAAMtC,MAAMwC,GAASlF,QAAUA,EAAU,IAG7C4F,eAAa,mBACVnB,EAAWM,QAAUA,GADX,cAEVN,EAAWQ,SAAWA,GAFZ,cAGVR,EAAWoB,WAAY,SAACb,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAChCF,EAAMrE,SAAU,EAChBqE,EAAMtC,MAAQwC,KALL,cAOVP,EAAoBI,QAAUA,GAPpB,cAQVJ,EAAoBM,SAAWA,GARrB,cASVN,EAAoBkB,WAAY,SAACb,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACzCF,EAAMrE,SAAU,EADuC,IAE/CuC,EAAoBgC,EAApBhC,SAAUzC,EAAUyE,EAAVzE,MAClBuE,EAAM9B,SAAWA,EACjB8B,EAAMtC,MAAQjC,KAbL,KAkBFqF,EAAsB,SAAAd,GAAK,OAAIA,EAAMvE,MAAMyC,UAC3C6C,EAAmB,SAAAf,GAAK,OAAIA,EAAMvE,MAAMC,OACxCsF,EAAqB,SAAAhB,GAAK,OAAIA,EAAMvE,MAAME,SAC1CsF,EAAsB,SAAAjB,GAAK,OAAIA,EAAMvE,MAAMG,UAC3CsF,EAAmB,SAAAlB,GAAK,OAAIA,EAAMvE,MAAMiC,OACxCyD,EAAed,EAAWe,QACxB9F,EAAY+E,EAAZ/E,QC1EF+F,EAAiB3B,YAAiB,2BAAD,sBAA6B,4BAAAtB,EAAA,sEACjDO,IADiD,YACnE2C,EADmE,QAE3D5F,MAF2D,sBAE9C4F,EAAU5F,MAFoC,gCAGlE4F,GAHkE,4CAM9DC,EAAiBjB,YAAY,CACxCC,KAAM,YACNC,aAAc,CACZ7E,SAAS,EACT+B,MAAO,GACPhC,MAAO,MAETkF,eAAa,mBACVS,EAAetB,SAAU,SAACC,GACzBA,EAAMtE,MAAQ,KACdsE,EAAMrE,SAAU,KAHP,cAKV0F,EAAepB,UAAW,SAACD,EAAD,GAAgC,IAAtBE,EAAqB,EAArBA,QAASxE,EAAY,EAAZA,MAC5CsE,EAAMrE,SAAU,EAChBqE,EAAMtE,OAAe,OAAPwE,QAAO,IAAPA,OAAA,EAAAA,EAASC,eAAgBzE,EAAM0E,WAPpC,cASViB,EAAeR,WAAY,SAACb,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACpCF,EAAMrE,SAAU,EAChBqE,EAAMtC,MAAQwC,EAAQX,KAAK+B,aAXlB,KAgBFE,EAAuB,SAAAxB,GAAK,OAAIA,EAAMsB,UAAU5D,OAChD+D,GAAuB,SAAAzB,GAAK,OAAIA,EAAMsB,UAAU5F,OAChDgG,GAAyB,SAAA1B,GAAK,OAAIA,EAAMsB,UAAU3F,SAClDgG,GAAmBJ,EAAeH,QCbxC,SAASQ,KACZ,IAAMnG,EAAQoG,YAAYX,GACpBY,EAAeD,YAAYZ,GAC3Bc,EAAeF,YAAYf,GAC3BkB,EAAaH,YAAYd,GACzBkB,EAAeJ,YAAYb,GAE3BM,EAAYO,YAAYL,GACxBU,EAAiBL,YAAYJ,IAC7BU,EAAmBN,YAAYH,IAE/BU,EAAWC,cAmBjB,OALAnG,qBAAU,WACNkG,EAAS3C,KACT2C,EAASf,OACV,CAACe,IAGA,oCACI,yBAAQjH,UAAWC,IAAOC,KAA1B,UACI,uCACA,cAACmC,EAAD,CACIE,MAAO4D,EACP7D,OAAQsE,EACRrG,MAAOwG,EACPvG,QAASwG,EACTxE,aA1BhB,SAA8BO,GAC1BkE,EAASzC,EAAoBzB,UA2BzB,cAAC1C,EAAD,CACIC,MAAOA,EACPC,MAAOsG,EACPrG,QAASsG,EACTrG,SAAUkG,EACV7G,WA7BZ,SAAoBqH,GAChBF,EAAS9G,EAAQP,KAAKuH,KA6BdpH,cA1BZ,SAAuBoH,GACnBF,EAAS9G,EAAQqF,QAAQ2B,UCzC1B,SAASC,KACZ,OACI,eAAC,WAAD,WACI,iCACI,qDAEJ,sBAAMpH,UAAU,YAAhB,SACI,cAACyG,GAAD,SCNT,IAAMY,GAAQC,YAAe,CAClCrB,QAAS,CACPE,UAAWK,GACXlG,MAAO0F,K,MCAXuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAACD,GAAD,QAGJ/F,SAASqG,eAAe,W","file":"static/js/main.549de58d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SingleCard_root__38F9t\",\"actions\":\"SingleCard_actions__1_1Kd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CardsList_root__1oU7w\",\"error\":\"CardsList_error__3Ld5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AppSelect_root__3JFaA\",\"error\":\"AppSelect_error__12hmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostsList_root__maf2d\"};","import React from 'react';\r\nimport styles from './SingleCard.module.scss';\r\n\r\nexport function SingleCard({ title, body, postIndex, like = 0, dislike = 0, handleLike, handleDislike }) {\r\n    return (\r\n        <article className={styles.root}>\r\n            <div className={styles.actions}>\r\n                <button onClick={() => handleLike(postIndex)}>{like} üëç</button>\r\n                <button onClick={() => handleDislike(postIndex)}>{dislike} üëé</button>\r\n            </div>\r\n            <h3>{title}</h3>\r\n            <p>{body}</p>\r\n        </article>\r\n    )\r\n}","import { Fragment, useState, useEffect } from 'react';\r\nimport { SingleCard } from '../SingleCard/SingleCard';\r\nimport styles from './CardsList.module.scss';\r\n\r\nfunction getScrollTop() {\r\n    return (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\r\n}\r\n\r\nfunction getDocumentHeight() {\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n\r\n    return Math.max(\r\n        body.scrollHeight, body.offsetHeight,\r\n        html.clientHeight, html.scrollHeight, html.offsetHeight\r\n    );\r\n};\r\n\r\nexport function CardsList({ posts, error, loading, handleLike, handleDislike, pageSize }) {\r\n    const [displayPosts, setDisplayPosts] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setDisplayPosts(posts.slice(0, page * pageSize));\r\n    }, [posts, page, pageSize])\r\n\r\n    useEffect(() => {\r\n        function handleScroll() {\r\n            if (getScrollTop() < getDocumentHeight() - window.innerHeight) return;\r\n            setPage(page => page + 1);\r\n        }\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {error ? <div className={styles.error}>Error: {error}</div> : null}\r\n            <ul className={styles.root}>\r\n                {displayPosts.map((post, postIndex) => (\r\n                    <li key={postIndex}><SingleCard {...post} postIndex={postIndex} handleLike={handleLike} handleDislike={handleDislike} /></li>\r\n                ))}\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n}","import styles from './AppSelect.module.scss';\r\n\r\nexport function AppSelect({ active, items, loading, error, handleChange }) {\r\n    return (\r\n        <fieldset className={styles.root}>\r\n            <select\r\n                disabled={loading || error}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n                value={active}>\r\n                <option default>Select Language</option>\r\n                {items.map(({ language }) => <option key={language} value={language}>{language}</option>)}\r\n            </select>\r\n            {error ? <div className={styles.error}>{error}</div> : null}\r\n        </fieldset>\r\n    )\r\n}","const POSTS_API = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\nexport async function getPosts() {\r\n    const response = await fetch(POSTS_API)\r\n    return response.json()\r\n}","const GOOGLE_TRANSLATE_API_KEY = process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY;\r\nconst GOOGLE_TRANSLATE_API_URL = 'https://translation.googleapis.com/language/translate/v2';\r\n\r\nexport async function getLanguages() {\r\n    const response = await fetch(`${GOOGLE_TRANSLATE_API_URL}/languages?key=${GOOGLE_TRANSLATE_API_KEY}`)\r\n    return response.json()\r\n}\r\n\r\nexport async function translate(values, target) {\r\n    const response = await fetch(`${GOOGLE_TRANSLATE_API_URL}?key=${GOOGLE_TRANSLATE_API_KEY}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            key: GOOGLE_TRANSLATE_API_KEY,\r\n            q: values,\r\n            target\r\n        })\r\n    })\r\n\r\n    return response.json()\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getPosts } from '../../api/posts'\r\nimport { translate } from '../../api/google-translate'\r\n\r\nasync function fetchTranslateSinglePost(item, language) {\r\n  const response = await translate([item.title, item.body], language);\r\n  if (response.error) throw response.error;\r\n  const { translations } = response.data;\r\n  const [title, body] = translations;\r\n  return { ...item, title: title.translatedText, body: body.translatedText };\r\n}\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', getPosts)\r\nexport const fetchTranslatePosts = createAsyncThunk('posts/fetchTranslatePosts', async (language, { getState }) => {\r\n  const { items } = getState().posts;\r\n\r\n  const posts = await Promise.all(\r\n    items.map((item) => fetchTranslateSinglePost(item, language))\r\n  )\r\n\r\n  return { language, posts };\r\n})\r\n\r\nfunction pending(state) {\r\n  state.error = null;\r\n  state.loading = true;\r\n}\r\n\r\nfunction rejected(state, { payload, error }) {\r\n  state.loading = false;\r\n  state.error = payload?.errorMessage || error.message;\r\n}\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    loading: false,\r\n    error: null,\r\n    language: 'en',\r\n    items: [],\r\n    pageSize: 10,\r\n    displayItems: [],\r\n  },\r\n  reducers: {\r\n    like: (state, { payload }) => {\r\n      const { like = 0 } = state.items[payload];\r\n      state.items[payload].like = like + 1;\r\n    },\r\n    disLike: (state, { payload }) => {\r\n      const { dislike = 0 } = state.items[payload];\r\n      state.items[payload].dislike = dislike + 1;\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [fetchPosts.pending]: pending,\r\n    [fetchPosts.rejected]: rejected,\r\n    [fetchPosts.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.items = payload;\r\n    },\r\n    [fetchTranslatePosts.pending]: pending,\r\n    [fetchTranslatePosts.rejected]: rejected,\r\n    [fetchTranslatePosts.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      const { language, posts } = payload;\r\n      state.language = language;\r\n      state.items = posts;\r\n    },\r\n  }\r\n});\r\n\r\nexport const selectPostsLanguage = state => state.posts.language;\r\nexport const selectPostsError = state => state.posts.error;\r\nexport const selectPostsLoading = state => state.posts.loading;\r\nexport const selectPostsPageSize = state => state.posts.pageSize;\r\nexport const selectPostsItems = state => state.posts.items;\r\nexport const postsReducer = postsSlice.reducer;\r\nexport const { actions } = postsSlice;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getLanguages } from '../../api/google-translate';\r\n\r\nexport const fetchLanguages = createAsyncThunk('languages/fetchLanguages', async () => {\r\n  const languages = await getLanguages();\r\n  if (languages.error) throw languages.error;\r\n  return languages;\r\n});\r\n\r\nexport const languagesSlice = createSlice({\r\n  name: 'languages',\r\n  initialState: {\r\n    loading: false,\r\n    items: [],\r\n    error: null\r\n  },\r\n  extraReducers: {\r\n    [fetchLanguages.pending]: (state) => {\r\n      state.error = null;\r\n      state.loading = true;\r\n    },\r\n    [fetchLanguages.rejected]: (state, { payload, error }) => {\r\n      state.loading = false;\r\n      state.error = payload?.errorMessage || error.message;\r\n    },\r\n    [fetchLanguages.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.items = payload.data.languages;\r\n    },\r\n  }\r\n});\r\n\r\nexport const selectLanguagesItems = state => state.languages.items;\r\nexport const selectLanguagesError = state => state.languages.error;\r\nexport const selectLanguagesLoading = state => state.languages.loading;\r\nexport const languagesReducer = languagesSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CardsList } from '../../components/CardsList/CardsList'\r\nimport { AppSelect } from '../../components/AppSelect/AppSelect'\r\nimport styles from './PostsList.module.scss';\r\nimport {\r\n    selectPostsItems,\r\n    selectPostsLanguage,\r\n    selectPostsError,\r\n    selectPostsLoading,\r\n    selectPostsPageSize,\r\n    actions,\r\n    fetchPosts,\r\n    fetchTranslatePosts\r\n} from '../../store/slices/posts';\r\nimport {\r\n    selectLanguagesItems,\r\n    selectLanguagesError,\r\n    selectLanguagesLoading,\r\n    fetchLanguages\r\n} from '../../store/slices/languages';\r\n\r\nexport function PostsList() {\r\n    const posts = useSelector(selectPostsItems);\r\n    const postPageSize = useSelector(selectPostsPageSize);\r\n    const postLanguage = useSelector(selectPostsLanguage);\r\n    const postsError = useSelector(selectPostsError);\r\n    const postsLoading = useSelector(selectPostsLoading);\r\n\r\n    const languages = useSelector(selectLanguagesItems);\r\n    const languagesError = useSelector(selectLanguagesError);\r\n    const languagesLoading = useSelector(selectLanguagesLoading);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function handleChangeLanguage(language) {\r\n        dispatch(fetchTranslatePosts(language))\r\n    }\r\n\r\n    function handleLike(itemIndex) {\r\n        dispatch(actions.like(itemIndex))\r\n    }\r\n\r\n    function handleDislike(itemIndex) {\r\n        dispatch(actions.disLike(itemIndex))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n        dispatch(fetchLanguages())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <section>\r\n            <header className={styles.root}>\r\n                <h2>Posts</h2>\r\n                <AppSelect\r\n                    items={languages}\r\n                    active={postLanguage}\r\n                    error={languagesError}\r\n                    loading={languagesLoading}\r\n                    handleChange={handleChangeLanguage} />\r\n            </header>\r\n            <CardsList\r\n                posts={posts}\r\n                error={postsError}\r\n                loading={postsLoading}\r\n                pageSize={postPageSize}\r\n                handleLike={handleLike}\r\n                handleDislike={handleDislike} />\r\n        </section>\r\n    )\r\n}","import React, { Fragment } from 'react';\r\nimport { PostsList } from './containers/PostsList/PostsList'\r\n\r\nexport function App() {\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <h1>Interview Project</h1>\r\n            </header>\r\n            <main className=\"container\">\r\n                <PostsList />\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport { postsReducer } from './slices/posts';\r\nimport { languagesReducer } from './slices/languages';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    languages: languagesReducer,\r\n    posts: postsReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport './assets/globals.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}